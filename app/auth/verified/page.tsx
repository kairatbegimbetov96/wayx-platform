// ‚úÖ WayX ‚Äî Verified Page (v7 PRO, production-stable)
"use client";

import { useEffect, useMemo, useRef, useState } from "react";
import { useRouter, useSearchParams } from "next/navigation";
import Link from "next/link";
import {
  getAuth,
  onAuthStateChanged,
  applyActionCode,
  signInWithEmailAndPassword,
} from "firebase/auth";
import app from "@/lib/firebase";
import { motion } from "framer-motion";
import {
  ShieldCheck,
  Timer,
  Loader2,
  CheckCircle2,
  AlertCircle,
  LogIn,
} from "lucide-react";

export default function VerifiedPage() {
  const router = useRouter();
  const params = useSearchParams();
  const auth = useMemo(() => getAuth(app), []);

  const [loading, setLoading] = useState(true);
  const [verified, setVerified] = useState<boolean | null>(null);
  const [autoLogin, setAutoLogin] = useState(false);
  const [errorText, setErrorText] = useState<string | null>(null);
  const [counter, setCounter] = useState(5);

  const timerRef = useRef<NodeJS.Timeout | null>(null);
  const intervalRef = useRef<NodeJS.Timeout | null>(null);
  const oobCode = params.get("oobCode");

  // üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–≥–ª–æ–±–∞–ª—å–Ω—ã–π toast)
  const toast = (msg: string, type: "success" | "info" | "error" = "info") => {
    (window as any)?.toast?.(msg, type) ??
      console.log(`[${type.toUpperCase()}] ${msg}`);
  };

  // üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ e-mail
  useEffect(() => {
    async function verifyEmail() {
      try {
        if (!oobCode) {
          // üß© –ù–µ—Ç –∫–æ–¥–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const unsub = onAuthStateChanged(auth, async (user) => {
            if (user) {
              await user.reload();
              if (user.emailVerified) {
                setVerified(true);
                startRedirect(true);
              } else {
                setVerified(false);
              }
            } else {
              setVerified(false);
            }
            unsub();
          });
          return;
        }

        // ‚úÖ –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        await applyActionCode(auth, oobCode);
        toast("‚úÖ E-mail –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!", "success");
        setVerified(true);

        // üîê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ (–µ—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ)
        const saved = localStorage.getItem("wayxUser");
        if (saved) {
          try {
            const creds = JSON.parse(saved);
            if (creds.email && creds.password) {
              setAutoLogin(true);
              await signInWithEmailAndPassword(auth, creds.email, creds.password);
              toast("üîê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω", "success");
              startRedirect(true);
              return;
            }
          } catch (e) {
            console.warn("Auto-login failed:", e);
            toast("‚ö†Ô∏è –ê–≤—Ç–æ–≤—Ö–æ–¥ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω. –í–æ–π–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é.", "error");
          }
        }

        // ‚û°Ô∏è –ë–µ–∑ –∞–≤—Ç–æ–ª–æ–≥–∏–Ω–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç
        startRedirect(false);
      } catch (err: any) {
        console.error("Verification error:", err);
        let message = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å e-mail.";

        // üéØ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ Firebase –æ—à–∏–±–æ–∫
        switch (err.code) {
          case "auth/invalid-action-code":
            message = "–°—Å—ã–ª–∫–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª–∞.";
            break;
          case "auth/expired-action-code":
            message = "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å—Å—ã–ª–∫–∏ –∏—Å—Ç—ë–∫.";
            break;
          case "auth/too-many-requests":
            message =
              "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 30‚Äì60 –º–∏–Ω—É—Ç.";
            break;
          case "auth/network-request-failed":
            message = "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.";
            break;
        }

        setErrorText(message);
        setVerified(false);
      } finally {
        setLoading(false);
      }
    }

    verifyEmail();
    return () => clearAllTimers();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  // ‚è≥ –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–æ–≤
  const clearAllTimers = () => {
    if (timerRef.current) clearTimeout(timerRef.current);
    if (intervalRef.current) clearInterval(intervalRef.current);
  };

  // üöÄ –ê–≤—Ç–æ–ø–µ—Ä–µ—Ö–æ–¥ (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞)
  const startRedirect = (goDashboard: boolean) => {
    clearAllTimers();
    setCounter(5);

    intervalRef.current = setInterval(() => {
      setCounter((c) => (c > 1 ? c - 1 : 0));
    }, 1000);

    timerRef.current = setTimeout(() => {
      localStorage.removeItem("wayxUser");
      router.replace(goDashboard ? "/dashboard" : "/auth/login");
    }, 5000);
  };

  // üåÄ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  if (loading)
    return (
      <div className="min-h-screen flex items-center justify-center text-blue-600 dark:text-blue-400">
        <Loader2 className="animate-spin w-8 h-8" />
      </div>
    );

  // ‚ö†Ô∏è –û—à–∏–±–∫–∞
  if (verified === false || errorText) {
    return (
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        className="min-h-screen flex items-center justify-center bg-gradient-to-br from-red-50 via-white to-gray-100 dark:from-gray-900 dark:via-gray-800 dark:to-black"
      >
        <div className="bg-white/80 dark:bg-gray-800/70 p-8 rounded-2xl shadow-2xl text-center max-w-md w-full backdrop-blur-xl">
          <AlertCircle className="w-14 h-14 text-red-500 mx-auto mb-3" />
          <h1 className="text-xl font-bold text-red-600 dark:text-red-400 mb-2">
            –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
          </h1>
          <p className="text-gray-600 dark:text-gray-400 text-sm mb-5">
            {errorText || "–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª."}
          </p>
          <Link
            href="/auth/login"
            className="inline-block bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-xl font-semibold transition"
          >
            –ü–µ—Ä–µ–π—Ç–∏ –∫–æ –≤—Ö–æ–¥—É
          </Link>
        </div>
      </motion.div>
    );
  }

  // ‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-green-50 via-white to-gray-100 dark:from-gray-900 dark:via-gray-800 dark:to-black">
      <motion.div
        initial={{ opacity: 0, scale: 0.96, y: 40 }}
        animate={{ opacity: 1, scale: 1, y: 0 }}
        transition={{ duration: 0.7, ease: "easeOut" }}
        className="p-8 bg-white/80 dark:bg-gray-800/70 rounded-2xl shadow-2xl text-center backdrop-blur-xl max-w-md w-full"
      >
        <div className="flex justify-center mb-4">
          <ShieldCheck className="w-14 h-14 text-green-500 drop-shadow-md" />
        </div>

        <h1 className="text-2xl font-bold text-green-600 dark:text-green-400 mb-2">
          E-mail —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!
        </h1>

        <p className="text-gray-600 dark:text-gray-400 text-sm leading-relaxed">
          –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.
          {autoLogin
            ? " –ú—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥."
            : " –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É."}
        </p>

        <div className="mt-6">
          <Link
            href={autoLogin ? "/dashboard" : "/auth/login"}
            className="inline-flex items-center justify-center bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-xl font-semibold shadow-md transition-transform hover:scale-[1.02]"
          >
            {autoLogin ? (
              <>
                <LogIn className="w-5 h-5 mr-2" />
                –ü–µ—Ä–µ–π—Ç–∏ –≤ –¥–∞—à–±–æ—Ä–¥
              </>
            ) : (
              <>
                <CheckCircle2 className="w-5 h-5 mr-2" />
                –ü–µ—Ä–µ–π—Ç–∏ –∫–æ –≤—Ö–æ–¥—É
              </>
            )}
          </Link>
        </div>

        <div className="mt-6 text-sm text-gray-500 dark:text-gray-400 flex flex-col items-center gap-1">
          <div className="flex items-center gap-2">
            <Timer className="w-4 h-4" />
            <p>
              –ê–≤—Ç–æ–ø–µ—Ä–µ—Ö–æ–¥ —á–µ—Ä–µ–∑ {counter} —Å–µ–∫.{" "}
              {autoLogin ? "(–≤ –¥–∞—à–±–æ—Ä–¥)" : "(–Ω–∞ –≤—Ö–æ–¥)"}
            </p>
          </div>
          {counter <= 2 && (
            <Loader2 className="w-5 h-5 text-blue-500 animate-spin mt-1" />
          )}
        </div>

        <p className="text-xs text-gray-400 dark:text-gray-500 mt-5">
          üîí WayX ‚Äî –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏, –¥–æ–≤–µ—Ä–∏–µ –∏ –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å –≤ –∫–∞–∂–¥–æ–π –¥–æ—Å—Ç–∞–≤–∫–µ.
        </p>
      </motion.div>
    </div>
  );
}
