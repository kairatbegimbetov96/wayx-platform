// ‚úÖ WayX ProtectedRoute ‚Äî —É–ª—É—á—à–µ–Ω–Ω–∞—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –≤–µ—Ä—Å–∏—è (final)
// –ü—É—Ç—å: components/ProtectedRoute.tsx
"use client";

import { useEffect, useRef, useState } from "react";
import { useRouter } from "next/navigation";
import { onAuthStateChanged, User } from "firebase/auth";
import { auth } from "@/lib/firebase";
import { Loader2, ShieldAlert, ShieldCheck } from "lucide-react";
import { motion } from "framer-motion";

/**
 * ProtectedRoute ‚Äî –∑–∞—â–∏—â–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
 * ‚ñ∏ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–æ—à—ë–ª ‚Äî –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ /auth/login.
 * ‚ñ∏ –ï—Å–ª–∏ e-mail –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω ‚Äî –º—è–≥–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç user.reload() –∏ –≤–µ–¥—ë—Ç –Ω–∞ /auth/verify.
 * ‚ñ∏ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç sessionStorage –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ UX –ø—Ä–∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö.
 * ‚ñ∏ –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥–≤–æ–π–Ω—ã–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã/—Ç–æ—Å—Ç—ã (debounce).
 */
export default function ProtectedRoute({
  children,
}: {
  children: React.ReactNode;
}) {
  const router = useRouter();

  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(true);

  // refs –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç ¬´–¥—Ä–µ–±–µ–∑–≥–∞¬ª
  const redirectedRef = useRef(false);
  const toastedRef = useRef(false);
  const unmountedRef = useRef(false);

  // –±–µ–∑–æ–ø–∞—Å–Ω—ã–π toast
  const toast = (msg: string, type: "info" | "success" | "error" = "info") => {
    if (toastedRef.current) return;
    toastedRef.current = true;
    (window as any)?.toast?.(msg, type);
    // —Å–±—Ä–æ—Å —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, —á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å
    setTimeout(() => {
      toastedRef.current = false;
    }, 1200);
  };

  // –ü–æ–ø—ã—Ç–∞—Ç—å—Å—è —Å–¥–µ–ª–∞—Ç—å –º—è–≥–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –æ–¥–∏–Ω —Ä–∞–∑
  const safeReplace = (href: string) => {
    if (redirectedRef.current) return;
    redirectedRef.current = true;
    router.replace(href);
  };

  useEffect(() => {
    unmountedRef.current = false;

    // 1) –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –∏–∑ –∫—ç—à–∞ (UX)
    const cached = sessionStorage.getItem("wayx-user");
    if (cached) {
      try {
        const parsed = JSON.parse(cached);
        // –ù–µ —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–º User, –Ω–æ –¥–ª—è UX ‚Äî –æ—Ç—Ä–∏—Å—É–µ–º –±—ã—Å—Ç—Ä–æ
        setUser(parsed as any);
        setLoading(false);
      } catch {
        sessionStorage.removeItem("wayx-user");
      }
    }

    // 2) –ê–∫—Ç—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ Firebase Auth
    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {
      // –ï—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —É–∂–µ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
      if (unmountedRef.current) return;

      try {
        if (!currentUser) {
          // –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          sessionStorage.removeItem("wayx-user");
          setUser(null);
          setLoading(false);
          toast("‚ö†Ô∏è –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø", "info");
          safeReplace("/auth/login");
          return;
        }

        // –ü—Ä–æ–±—É–µ–º ¬´–æ—Å–≤–µ–∂–∏—Ç—å¬ª –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤–∞–∂–Ω–æ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è e-mail)
        try {
          await currentUser.reload();
        } catch {
          // –∏–≥–Ω–æ—Ä ‚Äî –∏–Ω–æ–≥–¥–∞ reload –∫–∏–¥–∞–µ—Ç –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö
        }

        if (!currentUser.emailVerified) {
          setUser(null);
          setLoading(false);
          toast("üì© –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ e-mail, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å", "info");
          safeReplace("/auth/verify");
          return;
        }

        // –û–ö ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω
        const { uid, email, displayName } = currentUser;
        const light = { uid, email, displayName };
        sessionStorage.setItem("wayx-user", JSON.stringify(light));
        setUser(currentUser);
        setLoading(false);
      } catch {
        // –õ—é–±–∞—è –æ—à–∏–±–∫–∞ ‚Äî –≤–µ–¥—ë–º –Ω–∞ –≤—Ö–æ–¥ (fail-safe)
        sessionStorage.removeItem("wayx-user");
        setUser(null);
        setLoading(false);
        safeReplace("/auth/login");
      }
    });

    return () => {
      unmountedRef.current = true;
      unsubscribe();
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  // üåÄ –ó–∞–≥—Ä—É–∑–∫–∞/–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
  if (loading) {
    return (
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        className="flex flex-col items-center justify-center min-h-screen text-blue-600 dark:text-blue-400"
      >
        <Loader2 className="animate-spin w-10 h-10 mb-2" />
        <p className="text-sm font-medium">–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞‚Ä¶</p>
      </motion.div>
    );
  }

  // üö∑ –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ä–µ–¥–∏—Ä–µ–∫—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω)
  if (!user) {
    return (
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        className="flex flex-col items-center justify-center min-h-screen text-gray-600 dark:text-gray-300"
      >
        <ShieldAlert className="w-12 h-12 text-amber-500 mb-3" />
        <p className="text-lg font-medium mb-2">–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω</p>
        <p className="text-sm opacity-80">–ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞‚Ä¶</p>
      </motion.div>
    );
  }

  // ‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω
  return (
    <motion.div
      initial={{ opacity: 0, y: 10 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.25 }}
      className="w-full"
    >
      <div className="hidden sm:flex items-center gap-2 text-sm text-gray-400 dark:text-gray-500 px-4 pt-2">
        <ShieldCheck className="w-4 h-4 text-blue-500" />
        <span>
          –ó–∞—â–∏—â—ë–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª WayX ‚Äî –≤–æ—à—ë–ª –∫–∞–∫ <strong>{(user as any).email}</strong>
        </span>
      </div>
      {children}
    </motion.div>
  );
}
