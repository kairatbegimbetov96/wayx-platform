// components/RoutePreview.tsx
"use client";

import { motion } from "framer-motion";
import {
  MapPin,
  Truck,
  Plane,
  Ship,
  TrainFront,
  Navigation2,
  Globe,
  Clock,
  Cloud,
  Zap,
  Recycle,
  Route,
  Layers,
} from "lucide-react";
import { useMemo } from "react";

interface Props {
  origin: string;
  destination: string;
  transport: string; // "–ê–≤—Ç–æ" | "–ñ–î" | "–ê–≤–∏–∞" | "–ú–æ—Ä–µ" | "–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–∞—è"
}

/**
 * WayX RoutePreview ‚Äî –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–æ–≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.
 * –ë–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö API, –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–ª—è Vercel. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–µ —Å—Ö–µ–º—ã.
 */
export default function RoutePreview({ origin, destination, transport }: Props) {
  // –ò–∫–æ–Ω–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
  const transportIcons: Record<string, JSX.Element> = {
    –ê–≤—Ç–æ: <Truck className="text-blue-600 dark:text-blue-400 w-6 h-6" />,
    –ê–≤–∏–∞: <Plane className="text-blue-600 dark:text-blue-400 w-6 h-6" />,
    –ú–æ—Ä–µ: <Ship className="text-blue-600 dark:text-blue-400 w-6 h-6" />,
    –ñ–î: <TrainFront className="text-blue-600 dark:text-blue-400 w-6 h-6" />,
    –ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–∞—è: <Layers className="text-blue-600 dark:text-blue-400 w-6 h-6" />,
  };
  const travelIcon =
    transportIcons[transport] || (
      <Route className="text-blue-600 dark:text-blue-400 w-6 h-6" />
    );

  // –ü—Å–µ–≤–¥–æ-–º–µ—Ç—Ä–∏–∫–∏ (–≤–∏–∑—É–∞–ª—å–Ω—ã–µ, –±–µ–∑ API)
  const distance = useMemo(() => {
    if (!origin || !destination) return 0;
    const seed = (origin + destination + transport).length;
    const base = 150 + (seed * 97) % 2800; // 150..~2950
    switch (transport) {
      case "–ê–≤–∏–∞":
        return Math.round(base * 4);
      case "–ú–æ—Ä–µ":
        return Math.round(base * 5);
      case "–ñ–î":
        return Math.round(base * 2);
      case "–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–∞—è":
        return Math.round(base * 3);
      default: // –ê–≤—Ç–æ
        return Math.round(base);
    }
  }, [origin, destination, transport]);

  const duration = useMemo(() => {
    switch (transport) {
      case "–ê–≤–∏–∞":
        return "1‚Äì2 –¥–Ω—è";
      case "–ú–æ—Ä–µ":
        return "10‚Äì15 –¥–Ω–µ–π";
      case "–ñ–î":
        return "5‚Äì7 –¥–Ω–µ–π";
      case "–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–∞—è":
        return "7‚Äì12 –¥–Ω–µ–π";
      default:
        return "3‚Äì5 –¥–Ω–µ–π";
    }
  }, [transport]);

  const weather = ["‚òÄÔ∏è", "‚õÖ", "üåßÔ∏è", "‚ùÑÔ∏è"][distance % 4];
  const load = distance > 2500 ? "–í—ã—Å–æ–∫–∞—è" : distance > 1200 ? "–°—Ä–µ–¥–Ω—è—è" : "–ù–∏–∑–∫–∞—è";
  const eco =
    transport === "–ê–≤–∏–∞" ? "‚ö†Ô∏è" : transport === "–ú–æ—Ä–µ" ? "‚ôªÔ∏è" : "‚úÖ";

  return (
    <div className="relative bg-gradient-to-br from-blue-50 to-white dark:from-gray-800 dark:to-gray-900 border border-blue-100 dark:border-gray-700 rounded-2xl shadow-xl p-8 overflow-hidden backdrop-blur">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <h3 className="text-lg font-semibold text-blue-700 dark:text-blue-300 mb-6 text-center flex items-center justify-center gap-2">
        <Navigation2 className="w-5 h-5 text-blue-500" />
        –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
      </h3>

      {/* –õ–∏–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ */}
      <div className="relative flex justify-between items-center h-32 sm:h-36 mx-4 sm:mx-6">
        {/* –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
        <div className="flex flex-col items-center space-y-2 w-28 text-center">
          <MapPin className="text-green-600 w-5 h-5" />
          <span className="text-sm font-medium text-gray-700 dark:text-gray-300 truncate w-full">
            {origin || "–ì–æ—Ä–æ–¥ A"}
          </span>
        </div>

        {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–∏–Ω–∏—è */}
        <div className="relative flex-1 h-1.5 bg-gradient-to-r from-blue-200 to-cyan-300 dark:from-gray-700 dark:to-blue-800 rounded-full overflow-hidden mx-2">
          <motion.div
            className="absolute left-0 top-0 h-1.5 bg-gradient-to-r from-blue-600 to-cyan-400"
            initial={{ width: "0%" }}
            animate={{ width: "100%" }}
            transition={{
              duration: 2.5,
              ease: "easeInOut",
              repeat: Infinity,
              repeatType: "reverse",
            }}
          />
          <motion.div
            className="absolute top-[-14px]"
            initial={{ x: 0 }}
            animate={{ x: "100%" }}
            transition={{ duration: 5, repeat: Infinity, ease: "easeInOut" }}
          >
            {travelIcon}
          </motion.div>
        </div>

        {/* –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ */}
        <div className="flex flex-col items-center space-y-2 w-28 text-center">
          <MapPin className="text-red-600 w-5 h-5" />
          <span className="text-sm font-medium text-gray-700 dark:text-gray-300 truncate w-full">
            {destination || "–ì–æ—Ä–æ–¥ B"}
          </span>
        </div>
      </div>

      {/* –ú–µ—Ç—Ä–∏–∫–∏ */}
      <div className="mt-8 grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-4 text-center text-sm text-gray-600 dark:text-gray-400">
        <Metric icon={<Globe className="w-4 h-4 text-blue-500" />} title="–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ" value={`${distance} –∫–º`} />
        <Metric icon={<Clock className="w-4 h-4 text-blue-500" />} title="–°—Ä–æ–∫" value={duration} />
        <Metric icon={<Truck className="w-4 h-4 text-blue-500" />} title="–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç" value={transport || "‚Äî"} />
        <Metric icon={<Cloud className="w-4 h-4 text-blue-500" />} title="–ü–æ–≥–æ–¥–∞" value={weather} />
        <Metric icon={<Zap className="w-4 h-4 text-blue-500" />} title="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å" value={load} />
      </div>

      {/* –î–æ–ø. –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ */}
      <div className="mt-6 flex flex-wrap items-center justify-center gap-4 text-xs sm:text-sm text-gray-500 dark:text-gray-400">
        <div className="flex items-center gap-1">
          <Recycle className="w-4 h-4 text-green-500" />
          <span>–≠–∫–æ-–æ—Ü–µ–Ω–∫–∞: {eco}</span>
        </div>
        <div className="flex items-center gap-1">
          <Route className="w-4 h-4 text-cyan-500" />
          <span>–ú–∞—Ä—à—Ä—É—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</span>
        </div>
      </div>

      {/* –ü–æ–¥–ø–∏—Å—å */}
      <p className="mt-6 text-center text-xs sm:text-sm text-gray-500 dark:text-gray-400 italic">
        –ú–∞—Ä—à—Ä—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏. –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω—ã–µ.
      </p>

      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç */}
      <div className="absolute inset-0 bg-gradient-to-br from-blue-300/10 to-cyan-300/10 blur-3xl pointer-events-none" />
    </div>
  );
}

function Metric({ icon, title, value }: { icon: JSX.Element; title: string; value: string }) {
  return (
    <div className="flex flex-col items-center gap-1">
      {icon}
      <span>{title}</span>
      <strong className="text-gray-900 dark:text-gray-100">{value}</strong>
    </div>
  );
}
