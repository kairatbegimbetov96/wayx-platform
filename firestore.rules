rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }
    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    function isAdmin() { return getRole() == "admin"; }
    function isClient() { return getRole() == "client"; }
    function isSupplier() { return getRole() == "supplier"; }

    match /users/{uid} {
      allow read, update: if isOwner(uid) || isAdmin();
      allow create: if isSignedIn();
      allow delete: if isAdmin();
    }

    match /requests/{id} {
      allow read: if isSignedIn();
      allow create: if isClient();
      allow update: if isOwner(resource.data.ownerId) || isAdmin();
      allow delete: if isAdmin();
    }

    match /auctions/{id} {
      allow read: if true;
      allow create: if isClient();
      allow update: if isOwner(resource.data.ownerId) || isAdmin();
      allow delete: if isAdmin();
    }

    match /bids/{id} {
      allow read: if isSignedIn();
      allow create: if isSupplier();
      allow update: if isOwner(resource.data.userId) || isAdmin();
      allow delete: if isAdmin();
    }

    match /orders/{id} {
      allow read: if isSignedIn();
      allow create: if isClient() || isSupplier();
      allow update: if isOwner(resource.data.clientId) || isOwner(resource.data.supplierId) || isAdmin();
      allow delete: if isAdmin();
    }

    match /notifications/{notifId} {
      allow read, update, delete: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isSignedIn();
    }

    match /{document=**} {
      allow read: if isAdmin();
      allow write: if false;
    }
  }
}
